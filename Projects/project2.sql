-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.profession
(
    prof_id integer,
    profession character varying(100),
    PRIMARY KEY (prof_id)
);

CREATE TABLE IF NOT EXISTS public.zip_code
(
    zip_code integer,
    city character varying(50),
    province character varying(50),
    PRIMARY KEY (zip_code)
);

CREATE TABLE IF NOT EXISTS public.status
(
    status_id integer,
    status character varying(50),
    PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public.my_contacts
(
    contact_id integer,
    last_name character varying(50),
    first_name character varying(50),
    phone integer,
    email character varying(50),
    gender character varying,
    birthday date,
    prof_id integer,
    zip_code integer,
    status_id integer,
    PRIMARY KEY (contact_id)
);

CREATE TABLE IF NOT EXISTS public.contact_interest
(
    contact_id integer,
    interest_id integer
);

CREATE TABLE IF NOT EXISTS public.contact_seeking
(
    contact_id integer,
    seeking_id integer
);

CREATE TABLE IF NOT EXISTS public.interests
(
    interest_id integer,
    interests character varying(200),
    PRIMARY KEY (interest_id)
);

CREATE TABLE IF NOT EXISTS public.seeking
(
    seeking_id integer,
    seeking character varying(50),
    PRIMARY KEY (seeking_id)
);

ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (prof_id)
    REFERENCES public.profession (prof_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (zip_code)
    REFERENCES public.zip_code (zip_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (status_id)
    REFERENCES public.status (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (interest_id)
    REFERENCES public.interests (interest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (seeking_id)
    REFERENCES public.seeking (seeking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

--unique profession collumn
ALTER TABLE public.profession
ADD CONSTRAINT unique_professions UNIQUE (profession);

--test constraint
INSERT INTO public.profession (prof_id, profession)
VALUES
(160, 'Pharmacist');


-- Adding CHECK constraint to the 'zip_code' column in the 'zip_code' table
ALTER TABLE public.zip_code
ADD CONSTRAINT check_zip_code_length CHECK (LENGTH(zip_code::text) = 4);

--test constraint
INSERT INTO public.zip_code (zip_code, city, province)
VALUES
	(43091, 'Dullstroom', 'Mpumalanga');


-- Adding UNIQUE constraint to the 'profession' column in the 'my_contacts' table
ALTER TABLE public.my_contacts
ADD CONSTRAINT unique_profession UNIQUE (prof_id);

--testing constraint
INSERT INTO public.my_contacts (contact_id, last_name, first_name, phone, email, gender, birthday, prof_id, zip_code, status_id)
VALUES

    (2100, 'Smith', 'John', 1234567890, 'john.smith@email.com', 'Male', '1990-01-15', 10, 2000, 1);


--updateing my_contacts table to ensure phone is 10 digits and randon generate numbers
ALTER TABLE public.my_contacts
ALTER COLUMN phone TYPE bigint;

-- Add a check constraint to ensure the length is 10 digits
ALTER TABLE public.my_contacts
ADD CONSTRAINT check_phone_length CHECK (LENGTH(phone::text) = 10);

--testing constraint
INSERT INTO public.my_contacts (contact_id, last_name, first_name, phone, email, gender, birthday, prof_id, zip_code, status_id)
VALUES

    (2100, 'Smith', 'John', 234567890, 'john.smith@email.com', 'Male', '1990-01-15', 130, 2000, 1);



INSERT INTO public.profession (prof_id, profession)
VALUES
    (10, 'Software Engineer'),
    (20, 'Data Scientist'),
    (30, 'Teacher'),
    (40, 'Graphic Designer'),
    (50, 'Nurse'),
    (60, 'Marketing Manager'),
    (70, 'Chef'),
    (80, 'Electrician'),
    (90, 'Project Manager'),
    (100, 'Psychologist'),
    (110, 'Mechanical Engineer'),
    (120, 'Artist'),
    (130, 'Dentist'),
    (140, 'Accountant'),
    (150, 'Pharmacist');
	
	SELECT * FROM public."profession"
	
	INSERT INTO public.zip_code (zip_code, city, province)
	VALUES
    (2000, 'Johannesburg', 'Gauteng'),
	(2001, 'Pretoria', 'Gauteng'),
    (3001, 'Durban', 'KwaZulu-Natal'),
	(3002, 'Pennington', 'KwaZulu-Natal'),
    (6002, 'Port Elizabeth', 'Eastern Cape'),
	(6003, 'Jefferys Bay', 'Eastern Cape'),
    (8003, 'Cape Town', 'Western Cape'),
	(8004, 'Stellenbosch', 'Western Cape'),
    (9304, 'Bloemfontein', 'Free State'),
	(9305, 'Klerksdop', 'Free State'),
    (1205, 'Polokwane', 'Limpopo'),
	(1206, 'Bela Bela', 'Limpopo'),
    (2306, 'Mafikeng', 'North West'),
	(2307, 'Rustenberg', 'North West'),
    (3007, 'Kimberley', 'Northern Cape'),
	(3008, 'Paarl', 'Northern Cape'),
    (4308, 'Witbank', 'Mpumalanga'),
	(4309, 'Dullstroom', 'Mpumalanga');
	
	SELECT * FROM public."zip_code"
	
	INSERT INTO public.interests (interest_id, interests)
VALUES
    (110, 'Hiking'),
    (210, 'Reading'),
    (310, 'Traveling'),
    (410, 'Cooking'),
    (510, 'Photography'),
    (610, 'Fitness'),
    (710, 'Music'),
    (810, 'Art'),
    (910, 'Technology'),
    (1010, 'Sports'),
    (1110, 'Movies'),
    (1210, 'Gaming'),
    (1310, 'Writing'),
    (1410, 'Dancing'),
    (1510, 'Nature');
	
	SELECT * FROM public."interests"
	
	-- Add a new column called interest2
ALTER TABLE public.interests ADD COLUMN interest2 VARCHAR(255);

-- Update the interest2 column with some sample data
UPDATE public.interests
SET interest2 = 
    CASE
        WHEN interest_id = 110 THEN 'Mountain Climbing'
        WHEN interest_id = 210 THEN 'Book Club'
        WHEN interest_id = 310 THEN 'Backpacking'
        WHEN interest_id = 410 THEN 'Baking'
        WHEN interest_id = 510 THEN 'Digital Art'
        WHEN interest_id = 610 THEN 'Swimming'
        WHEN interest_id = 710 THEN 'Podcasting'
        WHEN interest_id = 810 THEN 'Sculpture'
        WHEN interest_id = 910 THEN 'Virtual Reality'
        WHEN interest_id = 1010 THEN 'Table Tennis'
        WHEN interest_id = 1110 THEN 'Documentaries'
        WHEN interest_id = 1210 THEN 'Chess'
        WHEN interest_id = 1310 THEN 'Poetry'
        WHEN interest_id = 1410 THEN 'Salsa Dancing'
        WHEN interest_id = 1510 THEN 'Bird Watching'
    END;
	
	INSERT INTO public.seeking (seeking_id, seeking)
VALUES
    (150, 'Friendship'),
    (250, 'Dating'),
    (350, 'Serious Relationship'),
    (450, 'Casual Relationship'),
    (550, 'Activity Partner'),
    (650, 'Travel Partner'),
    (750, 'Networking'),
    (850, 'Companionship'),
    (950, 'Flirting'),
    (1050, 'Online Chat'),
    (1150, 'Shared Hobbies'),
    (1250, 'Adventure'),
    (1350, 'Long-Term Commitment'),
    (1450, 'Marriage'),
    (1550, 'Not Sure');
	
	SELECT * FROM public."seeking"
	
	INSERT INTO public.status (status_id, status)
VALUES
    (1, 'Single'),
    (2, 'Taken'),
    (3, 'Complicated'),
    (4, 'Looking for Love'),
    (5, 'In a Relationship'),
    (6, 'Not Interested'),
    (7, 'Open to Dating'),
    (8, 'Exploring Options'),
    (9, 'Casually Dating'),
    (10, 'Seeking Companionship'),
    (11, 'Exclusive'),
    (12, 'On a Break'),
    (13, 'Engaged'),
    (14, 'Married'),
    (15, 'Divorced');
	
	SELECT * FROM public."status"
	
	INSERT INTO public.my_contacts (contact_id, last_name, first_name, phone, email, gender, birthday, prof_id, zip_code, status_id)
VALUES
    (100, 'Smith', 'John', 1234567890, 'john.smith@email.com', 'Male', '1990-01-15', 10, 2000, 1),
    (200, 'Johnson', 'Alice', 1234564321, 'alice.johnson@email.com', 'Female', '1985-05-20', 20, 3001, 2),
    (300, 'Williams', 'Bob', 1234564567, 'bob.williams@email.com', 'Male', '1995-08-10', 30, 6002, 3),
    (400, 'Jones', 'Emily', 1234567777, 'emily.jones@email.com', 'Female', '1988-12-03', 40, 8003, 4),
    (500, 'Davis', 'Chris', 1234563333, 'chris.davis@email.com', 'Male', '1992-04-25', 50, 9304, 5),
    (600, 'Brown', 'Sophia', 1234569999, 'sophia.brown@email.com', 'Female', '1987-07-15', 60, 1205, 6),
    (700, 'Miller', 'Emma', 1234566666, 'emma.miller@email.com', 'Female', '1998-02-18', 70, 9305, 7),
    (800, 'Wilson', 'David', 1234534444, 'david.wilson@email.com', 'Male', '1993-11-30', 80, 3007, 8),
    (900, 'Moore', 'Olivia', 1234578888, 'olivia.moore@email.com', 'Female', '1989-09-12', 90, 3002, 9),
    (1000, 'Taylor', 'Michael', 1234545555, 'michael.taylor@email.com', 'Male', '1996-06-08', 100, 2000, 10),
    (1100, 'Anderson', 'Ava', 1234590000, 'ava.anderson@email.com', 'Female', '1994-03-22', 110, 2000, 11),
    (1200, 'Thomas', 'Daniel', 1234509999, 'daniel.thomas@email.com', 'Male', '1986-10-05', 120, 3001, 12),
    (1300, 'White', 'Ella', 1234543333, 'ella.white@email.com', 'Female', '1991-07-28', 130, 4308, 13),
    (1400, 'Martin', 'Isaac', 1234565555, 'isaac.martin@email.com', 'Male', '1997-04-14', 140, 9304, 14),
    (1500, 'Clark', 'Mia', 1234587777, 'mia.clark@email.com', 'Female', '1984-09-01', 150, 2001, 15);

SELECT * FROM public."my_contacts"

INSERT INTO public.contact_interest (contact_id, interest_id)
VALUES
 
    (100, 110),
    (200, 210),
    (300, 310),
    (400, 410),
    (500, 510),
    (600, 610),
    (700, 710),
    (800, 810),
    (900, 910),
    (1000, 1010),
    (1100, 1110),
    (1200, 1210),
    (1300, 1310),
    (1400, 1410),
    (1500, 1510);
	
	SELECT * FROM public."contact_interest"
	
	INSERT INTO public.contact_seeking (contact_id, seeking_id)
VALUES
    (100, 150),
    (200, 250),
    (300, 350),
    (400, 450),
    (500, 550),
    (600, 650),
    (700, 750),
    (800, 850),
    (900, 950),
    (1000, 1050),
    (1100, 1150),
    (1200, 1250),
    (1300, 1350),
    (1400, 1450),
    (1500, 1550);
	
	SELECT * FROM public."contact_seeking"
	
 --left join
	
	SELECT
    c.contact_id,
    c.last_name,
    c.first_name,
    p.profession,
    z.zip_code,
    z.city,
    z.province,
    s.status,
    i.interests,
    i.interest2, -- Include the interest2 column
    se.seeking
FROM
    public.my_contacts c
LEFT JOIN public.profession p ON c.prof_id = p.prof_id
LEFT JOIN public.zip_code z ON c.zip_code = z.zip_code
LEFT JOIN public.status s ON c.status_id = s.status_id
LEFT JOIN public.contact_interest ci ON c.contact_id = ci.contact_id
LEFT JOIN public.interests i ON ci.interest_id = i.interest_id
LEFT JOIN public.contact_seeking cs ON c.contact_id = cs.contact_id
LEFT JOIN public.seeking se ON cs.seeking_id = se.seeking_id;
