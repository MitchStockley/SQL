-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Products Menu Table"
(
    product_id integer,
    product_name character varying(50),
    product_price float,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."Users Table"
(
    user_id integer,
    name character varying(50),
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."Cart Table"
(
    product_id integer,
    qty integer
);

CREATE TABLE IF NOT EXISTS public."OrderHeader Table"
(
    order_id integer,
    user_id integer,
    order_date date
);

CREATE TABLE IF NOT EXISTS public."OrderDetails Table"
(
    orderheader integer,
    product_id integer,
    qty integer
);

ALTER TABLE public."OrderHeader Table"
ADD CONSTRAINT unique_order_id UNIQUE (order_id);


ALTER TABLE IF EXISTS public."Cart Table"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products Menu Table" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderHeader Table"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."Users Table" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderDetails Table"
    ADD FOREIGN KEY (orderheader)
    REFERENCES public."OrderHeader Table" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderDetails Table"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products Menu Table" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

select * from public."Cart Table"
select * from public."Users Table"
select * from public."Products Menu Table"
select * from public."OrderHeader Table"
select * from public."OrderDetails Table"

-- Add unique constraint to OrderDetails table for order_id
ALTER TABLE public."OrderDetails Table"
ADD CONSTRAINT unique_order_id_order_details
UNIQUE (order_id);

-- Add the foreign key constraint to OrderDetails table
ALTER TABLE public."OrderDetails Table"
ADD CONSTRAINT fk_order_details_order_header
FOREIGN KEY (order_id)
REFERENCES public."OrderHeader Table"(order_id);

	
ALTER TABLE public."OrderDetails Table"
ADD CONSTRAINT unique_order_id
UNIQUE (order_id);

-- Delete all rows from OrderDetails table
DELETE FROM public."OrderHeader Table";

-- Delete all rows from OrderHeader table
DELETE FROM OrderHeader;


--Adding items into the products menu table
INSERT INTO public."Products Menu Table" (product_id, product_name, product_price)
VALUES
    (10, 'Coke', 10),  
    (20, 'Chips', 5),
    (30, 'Cake', 12),  
    (40, 'Coffee', 100);

select * from public."Products Menu Table";

--Adding Users
INSERT INTO public."Users Table" (user_id, name)
VALUES 
    (1, 'John Doe'),
    (2, 'Jane Smith');

select * from public."Users Table";

--STEP 3 ----Add a product to the cart (if product exists, increment qty by the supplied amount; if not, insert with qty)

INSERT INTO public."Cart Table" (product_id, qty)
VALUES (20, 3) -- Example values: product_id and qty -- change values based on product and qty being added -- test all products 
ON CONFLICT (product_id)
DO UPDATE SET qty = public."Cart Table".qty + EXCLUDED.qty
WHERE public."Cart Table".product_id = EXCLUDED.product_id;

--STEP 4 ---- Decrease the quantity by a specified amount, and remove if qty is less than 1
UPDATE public."Cart Table"
SET qty = GREATEST(qty - 3, 0) -- Example value: decrease by 3
WHERE product_id = 10; -- Change value based on product_id

DELETE FROM public."Cart Table" -- If the quantity becomes 0, delete the product from the table
WHERE product_id = 10 AND qty = 0;

--STEP 5 ----Checkout to place the order
INSERT INTO public."OrderHeader Table" ("order_id","user_id", "order_date")
VALUES
    (151,1, CURRENT_TIMESTAMP) -- Example user_id is 1
    -- or
    (161,2, CURRENT_TIMESTAMP) -- Example user_id is 2
;

--STEP 6 ---- Use the order ID to insert the cart contents into the order details table and delete the cart contents
INSERT INTO "OrderDetails Table" (order_id, product_id, qty)
SELECT
    161 as order_id, --change order id based on new orders 
    ct.product_id,
    ct.qty
FROM
    "Cart Table" ct;

DELETE FROM "Cart Table"; -- Optionally, if you want to clear the Cart Table for the specific order

--STEP 7 ---- Printing OrderHeader table for single and multiple orders 

-- select statement for single order
SELECT
    order_id,
    user_id,
    order_date
FROM
    "OrderHeader Table"
WHERE
    order_id = 151; 

-- select statement for all orders
SELECT
    order_id,
    user_id,
    order_date
FROM
    "OrderHeader Table"
WHERE
    DATE(order_date) = '2023-12-13'; -- 

--inner join to retrieve details from both the "OrderHeader Table" and the "OrderDetails Table":
SELECT
    oh.order_id,
    oh.user_id,
    oh.order_date,
    od.product_id,
    od.qty
FROM
    "OrderHeader Table" oh
JOIN
    "OrderDetails Table" od ON oh.order_id = od.order_id;


