-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Department"
(
    depart_id integer,
    depart_name character varying(50) COLLATE pg_catalog."default",
    depart_city character varying(50) COLLATE pg_catalog."default",
    PRIMARY KEY (depart_id)
);

CREATE TABLE IF NOT EXISTS public."Employees"
(
    emp_id integer NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default",
    surname character varying(50) COLLATE pg_catalog."default",
    gender text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    depart_id integer,
    role_id integer,
    salary_id integer,
    overtime_id integer,
    CONSTRAINT "Employees_pkey" PRIMARY KEY (emp_id)
);

CREATE TABLE IF NOT EXISTS public."Overtime Hours"
(
    overtime_id integer,
    overtime_hours integer,
    PRIMARY KEY (overtime_id)
);

CREATE TABLE IF NOT EXISTS public."Roles"
(
    role_id integer,
    role character varying(50) COLLATE pg_catalog."default",
    PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public."Salaries"
(
    salary_id integer,
    salary_pa integer,
    PRIMARY KEY (salary_id)
);

ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (overtime_id)
    REFERENCES public."Overtime Hours" (overtime_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Roles" (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
	ADD FOREIGN KEY (salary_id)
    REFERENCES public."Salaries" (salary_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (depart_id)
    REFERENCES public."Department" (depart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
SELECT * FROM public."Employees"
SELECT * FROM public."Department"
SELECT * FROM public."Overtime Hours"
SELECT * FROM public."Roles"
SELECT * FROM public."Salaries"

INSERT INTO public."Employees" (emp_id, first_name, surname, gender, address, email, depart_id, role_id, salary_id, overtime_id)
VALUES 
  ('1', 'Alice', 'Johnson', 'Female', 'malanshof', 'alice@gmail.com', 1111, 2222, 3333, 8888),
  ('2', 'Michael', 'Brown', 'Male', 'randburg', 'michael@gmail.com', 50000, 4444, 5555, 6666),
  ('3', 'Emily', 'Jones', 'Female', 'pretoria', 'emily@gmail.com', 38000, 7777, 8888, 9999),
  ('4', 'David', 'Miller', 'Male', 'durban', 'david@gmail.com', 45000, 1234, 5678, 9876),
  ('5', 'Sophia', 'Williams', 'Female', 'capetown', 'sophia@gmail.com', 41000, 2468, 1357, 9753),
  ('6', 'Sopia', 'Wiliams', 'Female', 'capetown', 'sophia@gmail.com', 4100, 268, 157, 953);
  
  INSERT INTO public."Department" (depart_id, depart_name, depart_city)
VALUES 
    ('1111', 'Finance', 'Johannesburg'),
    ('50000', 'Sales', 'Durban'),
    ('38000', 'Operations', 'Pretoria'),
    ('45000', 'Legal', 'Cape Town'),
    ('41000', 'Logistics', 'Bloemfontein');
	
	INSERT INTO public."Roles" (role_id, role)
VALUES 
    ('2222', 'Manager'),
    ('4444', 'Sales Representative'),
    ('7777', 'Operations Specialist'),
    ('1234', 'Legal Counsel'),
    ('2468', 'Logistics Coordinator');
	
	INSERT INTO public."Salaries" (salary_id, salary_pa)
VALUES 
    ('3333', 50000),
    ('5555', 60000),
    ('8888', 70000),
    ('5678', 80000),
    ('1357', 90127);
	
	INSERT INTO public."Overtime Hours" (overtime_id, overtime_hours)
VALUES 
    ('8888', 50),
    ('6666',60),
    ('9999', 70),
    ('9876', 80),
    ('9753',90);



	
    --left join

	SELECT
    E.emp_id,
    E.first_name,
    E.surname,
    D.depart_name AS department_name,
    R.role AS job_title,
    S.salary_pa AS salary_figure,
    OH.overtime_hours AS overtime_hours_worked
FROM
    public."Employees" E
LEFT JOIN
    public."Department" D ON E.depart_id = D.depart_id
LEFT JOIN
    public."Roles" R ON E.role_id = R.role_id
LEFT JOIN
    public."Salaries" S ON E.salary_id = S.salary_id
LEFT JOIN
    public."Overtime Hours" OH ON E.overtime_id = OH.overtime_id;
